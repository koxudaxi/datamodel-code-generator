# generated by datamodel-codegen:
#   filename:  without_titles.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel


class ProcessingStatus(Enum):
    COMPLETED = 'COMPLETED'
    PENDING = 'PENDING'
    FAILED = 'FAILED'


class Kind(BaseModel):
    __root__: str


class ExtendedProcessingTaskItem(BaseModel):
    comment: Optional[str] = None


class ProcessingTask(BaseModel):
    processing_status_union: Optional[ProcessingStatus] = 'COMPLETED'
    processing_status: Optional[ProcessingStatus] = 'COMPLETED'
    name: Optional[str] = None
    kind: Optional[Kind] = None


class Model(BaseModel):
    __root__: List[ProcessingTask]


class ExtendedProcessingTask(BaseModel):
    __root__: Union[Model, ExtendedProcessingTaskItem]


class ExtendedProcessingTasks(BaseModel):
    __root__: List[ExtendedProcessingTask]
