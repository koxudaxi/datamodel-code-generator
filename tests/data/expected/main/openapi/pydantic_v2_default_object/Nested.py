# generated by datamodel-codegen:
#   filename:  default_object.yaml
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel

from . import Foo as Foo_1


class Foo(RootModel[str]):
    root: str


class Bar(BaseModel):
    foo: Optional[Foo_1] = Field(
        default_factory=lambda: Foo_1.model_validate({'text': 'abc', 'number': 123})
    )
    baz: Optional[List[Foo_1]] = Field(
        default_factory=lambda: [
            Foo_1.model_validate(v)
            for v in [{'text': 'abc', 'number': 123}, {'text': 'efg', 'number': 456}]
        ]
    )
    nested_foo: Optional[Foo] = Field(
        default_factory=lambda: Foo.model_validate('default foo')
    )
