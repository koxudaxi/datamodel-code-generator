# generated by datamodel-codegen:
#   filename:  default_object.yaml
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from . import Foo as Foo_1
from . import Nested


class Foo(BaseModel):
    __root__: str


class Bar(BaseModel):
    original_foo: Optional[Foo_1] = Field(
        default_factory=lambda: Foo_1.parse_obj({'text': 'abc', 'number': 123})
    )
    nested_foo: Optional[List[Nested.Foo]] = Field(
        default_factory=lambda: [Nested.Foo.parse_obj(v) for v in ['abc', 'efg']]
    )
