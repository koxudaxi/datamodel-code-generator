# generated by datamodel-codegen:
#   filename:  long_description.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class LongDescription(BaseModel):
    summary: Optional[str] = Field(None, description='summary for object')
    description: Optional[str] = Field(
        None,
        description=(
            'datamodel-code-generator. This code generator creates pydantic model from'
            ' an openapi file and others.'
        ),
    )
    multi_line: Optional[str] = Field(
        None,
        description=(
            'datamodel-code-generator\nThis code generator creates pydantic model from'
            ' an openapi file and others.\n\n\nSupported source types\nOpenAPI 3'
            ' (YAML/JSON, OpenAPI Data Type)\nJSON Schema (JSON Schema Core/JSON Schema'
            ' Validation)\nJSON/YAML/CSV Data (it will be converted to JSON'
            ' Schema)\nPython dictionary (it will be converted to JSON Schema)'
        ),
    )
