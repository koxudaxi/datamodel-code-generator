# generated by datamodel-codegen:
#   filename:  pattern_properties_by_reference.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Extra, Field, constr


class Stt(BaseModel):
    class Config:
        extra = Extra.forbid

    timeout: Optional[float] = Field(None, title='STT Timeout')


class TextResponse(BaseModel):
    __root__: Dict[constr(regex=r'^[a-z]{1}[0-9]{1}$'), Any]


class SomeschemaSchema(BaseModel):
    class Config:
        extra = Extra.forbid

    KeyWithExplicitPatternProperties: Optional[
        Dict[constr(regex=r'^[a-z]{1}[0-9]{1}$'), Any]
    ] = None
    KeyWithPatternPropertiesByReference: Optional[TextResponse] = None
    SomeOtherBoringReference: Optional[Stt] = None
