# generated by datamodel-codegen:
#   filename:  subclass_enum.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from enum import Enum, IntEnum, StrEnum
from typing import Optional

from pydantic import BaseModel


class IntEnumModel(IntEnum):
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3


class FloatEnum(Enum):
    number_1_1 = 1.1
    number_2_1 = 2.1
    number_3_1 = 3.1


class StrEnumModel(StrEnum):
    field_1 = '1'
    field_2 = '2'
    field_3 = '3'


class NonTypedEnum(Enum):
    field_1 = '1'
    field_2 = '2'
    field_3 = '3'


class BooleanEnum(Enum):
    boolean_True = True
    boolean_False = False


class UnknownEnum(Enum):
    a = 'a'
    b = 'b'


class Model(BaseModel):
    IntEnum: Optional[IntEnumModel] = None
    FloatEnum: Optional[FloatEnum] = None
    StrEnum: Optional[StrEnumModel] = None
    NonTypedEnum: Optional[NonTypedEnum] = None
    BooleanEnum: Optional[BooleanEnum] = None
    UnknownEnum: Optional[UnknownEnum] = None
