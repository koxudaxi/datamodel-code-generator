# generated by datamodel-codegen:
#   filename:  discriminator_literals.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import Annotated, ClassVar, Literal, Union

from msgspec import Meta, Struct, UnsetType


class Type1(Struct, kw_only=True, tag_field='type_', tag='a'):
    type_: ClassVar[Annotated[Union[Literal['a'], UnsetType], Meta(title='Type ')]] = (
        'a'
    )


class Type2(Struct, kw_only=True, tag_field='type_', tag='b'):
    type_: ClassVar[Annotated[Union[Literal['b'], UnsetType], Meta(title='Type ')]] = (
        'b'
    )


class UnrelatedType(Struct, kw_only=True):
    info: Union[
        Annotated[str, Meta(title='A way to check for side effects')], UnsetType
    ] = 'Unrelated type, not involved in the discriminated union'


class Response(Struct, kw_only=True):
    inner: Annotated[Union[Type1, Type2], Meta(title='Inner')]
