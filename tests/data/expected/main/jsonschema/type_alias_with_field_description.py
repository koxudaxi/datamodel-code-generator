# generated by datamodel-codegen:
#   filename:  type_alias.json
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional, Union

from pydantic import BaseModel, Field
from typing_extensions import TypeAliasType

Model = TypeAliasType("Model", Any)


SimpleString = TypeAliasType("SimpleString", str)


UnionType = TypeAliasType("UnionType", Union[str, int])


ArrayType = TypeAliasType("ArrayType", List[str])


AnnotatedType = TypeAliasType(
    "AnnotatedType", Annotated[Union[str, bool], Field(..., title='MyAnnotatedType')]
)
"""
An annotated union type
"""


class ModelWithTypeAliasField(BaseModel):
    simple_field: Optional[SimpleString] = None
    union_field: Optional[UnionType] = None
    array_field: Optional[ArrayType] = None
    annotated_field: Optional[AnnotatedType] = None
