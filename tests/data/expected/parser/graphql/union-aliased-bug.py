# generated by datamodel-codegen:
#   filename:  union-aliased-bug.graphql
#   timestamp: 2019-07-26T00:00:00+00:00

from __future__ import annotations

from typing import Literal, Optional, TypeAlias, Union

from pydantic import BaseModel, Field

Boolean: TypeAlias = bool
"""
The `Boolean` scalar type represents `true` or `false`.
"""


String: TypeAlias = str
"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""


class GroupMetadata(BaseModel):
    name: String
    typename__: Optional[Literal['GroupMetadata']] = Field(
        'GroupMetadata', alias='__typename'
    )


class Resource(BaseModel):
    metadata: UserMetadata
    typename__: Optional[Literal['Resource']] = Field('Resource', alias='__typename')


class UserMetadata(BaseModel):
    name: String
    typename__: Optional[Literal['UserMetadata']] = Field(
        'UserMetadata', alias='__typename'
    )


Metadata: TypeAlias = Union[
    'GroupMetadata',
    'UserMetadata',
]
