name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test ${{ matrix.python-version }}@${{ matrix.os }} with isort ${{ matrix.isort-version }}, pydantic ${{ matrix.pydantic-version }}, black ${{ matrix.black-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10", "3.9", "3.8"]
        os: [ubuntu-24.04, windows-latest, macos-latest]
        isort-version: [4.3.21, 5.6.4, default]
        black-version: [default]
        pydantic-version: [1.10.9, 2.10.3]
        include:
          - os: ubuntu-24.04
            isort-version: 4.3.21
            black-version: default
            python-version: 3.8
            pydantic-version: 1.5.1
          - os: ubuntu-24.04
            isort-version: 5.6.4
            black-version: default
            python-version: 3.8
            pydantic-version: 1.8.2
          - os: ubuntu-24.04
            isort-version: 5.6.4
            black-version: 19.10b0
            python-version: 3.9
            pydantic-version: 1.8.2
          - os: ubuntu-24.04
            isort-version: 5.6.4
            black-version: 24.1.0
            python-version: 3.12
            pydantic-version: 2.4.2
          - os: ubuntu-24.04
            isort-version: 5.6.4
            black-version: 23.12.1
            python-version: 3.12
            pydantic-version: 2.4.2
          - os: ubuntu-24.04
            isort-version: 5.6.4
            black-version: 22.1.0
            python-version: 3.12
            pydantic-version: 2.4.2
        exclude:
          - isort-version: 4.3.21
          - isort-version: 5.6.4
          - os: windows-latest
            black-version: 22.1.0
          - os: macos-latest
            black-version: 22.1.0
          - os: windows-latest
            pydantic-version: 1.10.9
          - os: macos-latest
            pydantic-version: 1.10.9
          - os: windows-latest
            python-version: 3.8
          - os: macos-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.9
          - os: macos-latest
            python-version: 3.9
          - os: windows-latest
            python-version: 3.10
          - os: macos-latest
            python-version: 3.10
          - os: windows-latest
            python-version: 3.11
          - os: macos-latest
            python-version: 3.11
          - os: windows-latest
            python-version: 3.12
          - os: macos-latest
            python-version: 3.12
          - os: macos-latest
            isort-version: 4.3.21
          - isort-version: 5.6.4
            pydantic-version: 1.10.9
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: uv sync
    - name: Install isort ${{ matrix.isort-version }} for Linux/macOS
      if: "runner.os != 'Windows' && matrix.isort-version != 'default'"
      run: uv pip install isort==${{ matrix.isort-version }}
    - name: Install Pydantic ${{ matrix.pydantic-version }}
      if: matrix.pydantic-version != 'default'
      run: uv pip install pydantic=="${{ matrix.pydantic-version }}"
    - name: Install Black ${{ matrix.black-version }}
      if: matrix.black-version != 'default'
      run: uv pip install black=="${{ matrix.black-version }}"
    - name: Lint
      if: matrix.pydantic-version == 'default'
      run: ./scripts/lint.sh
    - name: Unit Test
      run: ./scripts/test.sh
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-24.04'
      uses: codecov/codecov-action@v5
      with:
        flags: unittests
        files: ./coverage.xml
        fail_ci_if_error: true
        env_vars: OS,PYTHON,ISORT
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
